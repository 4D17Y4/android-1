buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://download.crashlytics.com/maven"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath "com.crashlytics.tools.gradle:crashlytics-gradle:1.+"
        classpath "com.jakewharton.sdkmanager:gradle-plugin:0.10.+"
    }
}

apply plugin: "android-sdk-manager"
apply plugin: "android"
apply plugin: "crashlytics"

android {
    compileSdkVersion 19
    buildToolsVersion "19.1"

    defaultConfig {
        versionName "0.1.7"
        versionCode 17

        minSdkVersion 14
        targetSdkVersion 19

        def apiFile = file("api.properties")
        def apiProperties = new Properties()

        if (apiFile.exists()) {
            apiProperties.load(apiFile.newInputStream())

            buildConfigField "String", "API_URL_AMAHI", formatStringField(apiProperties["url.amahi"])
            buildConfigField "String", "API_URL_PROXY", formatStringField(apiProperties["url.proxy"])
            buildConfigField "String", "API_CLIENT_ID", formatStringField(apiProperties["client.id"])
            buildConfigField "String", "API_CLIENT_SECRET", formatStringField(apiProperties["client.secret"])
        }
    }
}

def formatStringField(field) {
    return String.format("\"%s\"", field)
}

dependencies {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "http://download.crashlytics.com/maven"
        }
    }

    compile "com.android.support:support-v4:19.1.+"
    compile "com.crashlytics.android:crashlytics:1.+"
    compile "com.jakewharton.timber:timber:2.3.+"
    compile "com.squareup.dagger:dagger:1.2.+"
    compile "com.squareup.okio:okio:1.0.+"
    compile "com.squareup.okhttp:okhttp:1.5.+"
    compile "com.squareup:otto:1.3.+"
    compile "com.squareup.picasso:picasso:2.2.+"
    compile "com.squareup.retrofit:retrofit:1.5.+"
    compile "org.videolan:libvlc:0.9.+"

    provided "com.squareup.dagger:dagger-compiler:1.2.+"
}
